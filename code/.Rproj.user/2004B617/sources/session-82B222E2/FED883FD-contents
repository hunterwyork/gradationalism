---
title: "skill_dim_red"
author: "Hunter York"
date: "11/23/2021"
output: pdf_document
---

```{r setup, echo = F}
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
library(Rfast)
library(ggplot2)
library(dplyr)
library(magrittr)
library(stringr)
library(readxl)
library(haven)
library(data.table)
library(umap)
pc_n <- 15
n <- 10000
theme_set(theme_bw(base_size = 8, base_family = "serif")) 
# load the data
#setwd("/Users/hyork/Documents/projects/occupation/code")
```

```{r}
#saveRDS(gen, "../inputs/cps_00010.rds")
gen <- read_dta( "../inputs/pooled_data(1).dta") %>% data.table()
ed_male <- read_dta( "../inputs/pooled_edu_mobility_male.dta") %>% data.table()
ed_female <- read_dta( "../inputs/pooled_edu_mobility_female.dta") %>% data.table()
ed_male[, sex := 1]
ed_female[, sex := 2]
ed_all <- rbind(ed_male, ed_female)
# gen <-  merge(gen, ed_all[,.(newid, sex, fa_edu, mo_edu, edu,birthyear)], by = c("newid", "sex", "birthyear"))
moms <- gen[!is.na(mmicroocc)]
gen[, parent_sex := 1]
moms[, parent_sex := 2]
moms[, focc1950 := mocc1950]
moms[, fmicroocc := mmicroocc]
moms[, focc_rank := mocc_rank]
#moms[, fa_edu := mo_edu]
moms[, fbirthyear := mbirthyear]
moms[, fcohort := mcohort]
gen <- rbind(gen, moms)
#
# gen[edu %in% 0:5, edu_recode := "Less than HS"]
# gen[edu %in% 6, edu_recode := "HS"]
# gen[edu %in% 7:8, edu_recode := "Some College"]
# gen[edu %in% 10, edu_recode := "College"]
# gen[edu %in% 11, edu_recode := "Graduate"]
# gen[fa_edu %in% 0:5, fa_edu_recode := "Less than HS"]
# gen[fa_edu %in% 6, fa_edu_recode := "HS"]
# gen[fa_edu %in% 7:8, fa_edu_recode := "Some College"]
# gen[fa_edu %in% 10, fa_edu_recode := "College"]
# gen[fa_edu %in% 11, fa_edu_recode := "Graduate"]
temp <- names(gen)

# subset
#gen <- gen[birthyear > 1950]

```

```{r}


# load occ_soc xwalk
occ_xwalk <- data.table(read_excel("../ref/nem-occcode-cps-crosswalk.xlsx"))
names(occ_xwalk) <- occ_xwalk[4,] %>% unlist()
occ_xwalk <- occ_xwalk[-(1:4),]
occ_xwalk[, OCCSOC := gsub("-", "", `Hybrid SOC Code`)]

occ_xwalk2 <- data.table(read_excel("../ref/2018-occupation-code-list-and-crosswalk.xlsx", sheet = 2))
names(occ_xwalk2) <- occ_xwalk2[4,] %>% unlist()
occ_xwalk2 <- occ_xwalk2[-(1:4),]
occ_xwalk2 <- occ_xwalk2[,.(`2018 Census Title`, `2018 Census Code`, `2018 SOC Code`)]
occ_xwalk2[, OCCSOC := gsub("-", "", `2018 SOC Code`)]
setnames(occ_xwalk2, c("2018 Census Title", "2018 Census Code"), c("CPS Occupational Title", "CPS Code"))
occ_xwalk2 <- occ_xwalk2[!is.na(`CPS Code`) & !`CPS Code` %flike% "-"]
# now create skills dataset

skills_2018 <- read_excel("../ref/db_27_0_excel/Skills.xlsx") %>% data.table()
skills_2018[, year := 2018]
setnames(skills_2018, names(skills_2018), gsub(" ", ".", names(skills_2018), fixed = T))
skills_2018[, `O.NET.SOC.Code` := `O*NET-SOC.Code`]
skills1 <- rbindlist(list( skills_2018), fill = T)
skills1 <- skills1[, .(O.NET.SOC.Code, Element.Name, Scale.ID, Data.Value, Standard.Error, year)]
skills1[, Element.Name := paste0("skl_", Element.Name)]
# add abilities
abilities_2018 <- read_excel("../ref/db_27_0_excel/Abilities.xlsx") %>% data.table()
abilities_2018[, year := 2018]
setnames(abilities_2018, names(abilities_2018), gsub(" ", ".", names(abilities_2018), fixed = T))
abilities_2018[, `O.NET.SOC.Code` := `O*NET-SOC.Code`]
abilities <- rbindlist(list( abilities_2018), fill = T)
abilities <- abilities[, .(O.NET.SOC.Code, Element.Name, Scale.ID, Data.Value, Standard.Error, year)]
abilities[, Element.Name := paste0("abl_", Element.Name)]
# add knowledge
knowledge_2018 <- read_excel("../ref/db_27_0_excel/Knowledge.xlsx") %>% data.table()
knowledge_2018[, year := 2018]
setnames(knowledge_2018, names(knowledge_2018), gsub(" ", ".", names(knowledge_2018), fixed = T))
knowledge_2018[, `O.NET.SOC.Code` := `O*NET-SOC.Code`]
knowledge <- rbindlist(list(knowledge_2018), fill = T)
knowledge <- knowledge[, .(O.NET.SOC.Code, Element.Name, Scale.ID, Data.Value, Standard.Error, year)]
knowledge[, Element.Name := paste0("knl_", Element.Name)]
# add work activities
workactivities_2018 <- read_excel("../ref/db_27_0_excel/Work Activities.xlsx") %>% data.table()
workactivities_2018[, year := 2018]
setnames(workactivities_2018, names(workactivities_2018), gsub(" ", ".", names(workactivities_2018), fixed = T))
workactivities_2018[, `O.NET.SOC.Code` := `O*NET-SOC.Code`]
workactivities <- rbindlist(list( workactivities_2018), fill = T)
workactivities <- workactivities[, .(O.NET.SOC.Code, Element.Name, Scale.ID, Data.Value, Standard.Error, year)]
workactivities[, Element.Name := paste0("act_", Element.Name)]
# add work styles

workstyles_2018 <- read_excel("../ref/db_27_0_excel/Work Styles.xlsx") %>% data.table()

workstyles_2018[, year := 2018]
setnames(workstyles_2018, names(workstyles_2018), gsub(" ", ".", names(workstyles_2018), fixed = T))
workstyles_2018[, `O.NET.SOC.Code` := `O*NET-SOC.Code`]
workstyles <- rbindlist(list(workstyles_2018), fill = T)
workstyles <- workstyles[, .(O.NET.SOC.Code, Element.Name, Scale.ID, Data.Value, Standard.Error, year)]
workstyles[, Element.Name := paste0("sty_", Element.Name)]
# add work context

context_2018 <- read_excel("../ref/db_27_0_excel/Work Context.xlsx") %>% data.table()
context_2018[, year := 2018]
setnames(context_2018, names(context_2018), gsub(" ", ".", names(context_2018), fixed = T))
context_2018[, `O.NET.SOC.Code` := `O*NET-SOC.Code`]
context <- rbindlist(list( context_2018), fill = T)
context <- context[, .(O.NET.SOC.Code, Element.Name, Scale.ID, Data.Value, Standard.Error, year)]
context <- context[Scale.ID %in% c("CX", "CT")]
context[, Element.Name := paste0("ctx_", Element.Name)]
# add work values
values_2018 <- read_excel("../ref/db_27_0_excel/Work Values.xlsx") %>% data.table()
values_2018[, year := 2018]
setnames(values_2018, names(values_2018), gsub(" ", ".", names(values_2018), fixed = T))
values_2018[, `O.NET.SOC.Code` := `O*NET-SOC.Code`]
values <- rbindlist(list(values_2018), fill = T)
values <- values[, .(O.NET.SOC.Code, Element.Name, Scale.ID, Data.Value, year)]
values <- values[Scale.ID %in% c("EX")]
values[, Element.Name := paste0("vlu_", Element.Name)]
# add education training, etc

education_2018 <- read_excel("../ref/db_27_0_excel/Education, Training, and Experience.xlsx") %>% data.table()

education_2018[, year := 2018]
setnames(education_2018, names(education_2018), gsub(" ", ".", names(education_2018), fixed = T))
education_2018[, `O.NET.SOC.Code` := `O*NET-SOC.Code`]
education <- rbindlist(list( education_2018), fill = T)
education <- education[,.(Data.Value = stats::weighted.mean(Category, Data.Value)), by = .(O.NET.SOC.Code, Element.Name, Scale.ID, year)]
education <- education[, .(O.NET.SOC.Code, Element.Name, Scale.ID, Data.Value, year)]
education[, Element.Name := paste0("edu_", Element.Name)]
# # add tasks
# task_2009 <- read.delim('../ref/db_14_0 2009.7/Task Ratings.txt') %>% data.table()
# task_2013 <-  read.delim('../ref/db_18_0_2013.7/Task Ratings.txt') %>% data.table()
# task_2018 <- read_excel("../ref/db_22_2_excel 2018.2/Task Ratings.xlsx") %>% data.table()
# task_2009[, year := 2009]
# task_2013[, year := 2013]
# task_2018[, year := 2018]
# setnames(task_2018, names(task_2018), gsub(" ", ".", names(task_2018), fixed = T))
# task_2018[, `O.NET.SOC.Code` := `O*NET-SOC.Code`]
# task <- rbindlist(list(task_2009, task_2013, task_2018), fill = T)
# task <- task[, .(O.NET.SOC.Code, Task, Scale.ID, Data.Value, Standard.Error, year)]
# task <- task[Scale.ID %in% c("IM")]
# task[, Element.Name := paste0("tsk_", Task)]
# task <- task[!is.na(Task)]
#
skills <- rbindlist(list(skills1, knowledge, abilities, workstyles, 
                         workactivities,context, values, education), fill = T)
#skills <- rbindlist(list(skills, knowledge, abilities, workstyles, workactivities), fill = T)
# standardize
skills[Scale.ID == "LV", Data.Value := Data.Value/7]
skills[Scale.ID == "EX", Data.Value := (Data.Value-1)/6]
skills[Scale.ID == "IM", Data.Value := (Data.Value-1)/4]
skills[Scale.ID == "CX", Data.Value := (Data.Value-1)/4]
skills[Scale.ID == "CT", Data.Value := (Data.Value-1)/2]
skills[Scale.ID == "RW", Data.Value := (Data.Value-1)/9]
skills[Scale.ID == "PT", Data.Value := (Data.Value-1)/7]
skills[Scale.ID == "OJ", Data.Value := (Data.Value-1)/7]
skills[Scale.ID == "RL", Data.Value := (Data.Value-1)/11]
skills[Element.Name %like% "sty_", Scale.ID := "LV"]
skills[Element.Name %like% "ctx", Scale.ID := "LV"]
skills[Element.Name %like% "vlu", Scale.ID := "LV"]
skills[Element.Name %like% "edu_", Scale.ID := "LV"]
#
skills <- skills[Scale.ID == "LV"]
#saveRDS(skills, "../ref/skills_unedited.rds")
#
```



```{r}
# reformat onet codes to merge
# skills[,Element.Name2 := paste0(substr(Element.Name, 1, 15), "_", str_sub(Element.Name, -15, -1))]
# skills_xwalk <- skills[,.(Element.Name2, Element.Name)] %>% unique()
# fwrite(skills_xwalk, "../ref/skills_xwalk.csv")
#skills[,Element.Name := paste0(substr(Element.Name, 1, 15), "_", str_sub(Element.Name, -15, -1))]
skills[, OCCSOC := gsub("-", "", substr(O.NET.SOC.Code,1,7))]
skills[, Standard.Error := as.numeric(Standard.Error)]
# skills <- skills[,.(Data.Value = mean(Data.Value),
#                     Standard.Error = mean((Standard.Error))), by = .(Element.Name,Scale.ID, OCCSOC)]
# add income
# chack to see which occ codes are missing
occ_xwalk[!OCCSOC %in% unique(skills$OCCSOC), unique(OCCSOC)]
# 
skills[, Element.Name := paste0(Element.Name, ".", Scale.ID)]
#skills[,Data.Value := percent_rank(Data.Value), by = .(Element.Name, Scale.ID)]
# skills <- skills[, .(Data.Value  = mean(Data.Value, na.rm = T), 
#            Standard.Error = mean(Standard.Error, na.rm = T)), # throw away SE anyway
#            by = .(Element.Name, Element.Name2, OCCSOC)]

skills <- skills[, .(Data.Value  = mean(Data.Value, na.rm = T), 
                     Standard.Error = mean(Standard.Error, na.rm = T)), # throw away SE anyway
                 by = .(Element.Name, OCCSOC)]

skills <- skills[!Element.Name %like% "Job-Related|Apprent"]

skills <- skills[!OCCSOC %in% skills[is.na(Data.Value)]$OCCSOC]


skills_wide <- dcast(skills, OCCSOC   ~Element.Name, value.var = "Data.Value")

# for fishers and hunters, edu variables are missing
skills_wide[OCCSOC == 453031, `edu_On-Site or In-Plant Training.LV` := 0]
skills_wide[OCCSOC == 453031, `edu_On-the-Job Training.LV` := 0]
skills_wide[OCCSOC == 453031, `edu_Related Work Experience.LV` := 0]
skills_wide[OCCSOC == 453031, `edu_Required Level of Education.LV` := 0]

skills_wide <- skills_wide[!OCCSOC %in% skills_wide[!complete.cases(skills_wide)]$OCCSOC]
# instead of dropping, impute missing values by taking the average of the entire sample


skills <- copy(skills_wide)
```



```{r}
#occ_xwalk[!OCCSOC %in% skills$OCCSOC] -> temp
skills <- merge(skills, occ_xwalk[,.(OCCSOC, `CPS Code`, `CPS Occupational Title`)], all.x = T)


# occ50_xwalk <- readxl::read_xlsx("../ref/Census_integrated_occ_crosswalks.xlsx", sheet = 5) %>% data.table()
# occ50_xwalk <- occ50_xwalk[,.(`1950`, `ACS 2010-`, `Occupation category description`)]
# setnames(occ50_xwalk, c("OCC1950", "CPS Code", "OCC1950_name"))
# occ50_xwalk[, OCC1950 := nafill(OCC1950, type = "locf")]

occ50_xwalk <- readxl::read_xlsx("../ref/Census_integrated_occ_crosswalks.xlsx", sheet = 1) %>% data.table()
occ50_xwalk <- occ50_xwalk[,.(`OCC1950`, `ACS 2003-`, `Occupation category description`)]
setnames(occ50_xwalk, c("OCC1950", "CPS Code", "OCC1950_name"))

# occ50_xwalk[OCC1950 == 17, `CPS Code` := 2205]# teachers
# occ50_xwalk[OCC1950 == 25, `CPS Code` := 2205]
# occ50_xwalk[OCC1950 == 28, `CPS Code` := 2205]
# occ50_xwalk[OCC1950 == 29, `CPS Code` := 2205]
occ50_xwalk[OCC1950 == 35, `CPS Code` := 1545]
occ50_xwalk[OCC1950 == 63, `CPS Code` := 1935]
occ50_xwalk[OCC1950 == 75, `CPS Code` := 3090]
#occ50_xwalk[OCC1950 == 100, `CPS Code` := 205]#
#occ50_xwalk[OCC1950 == 123, `CPS Code` := 200]#
occ50_xwalk[OCC1950 == 360, `CPS Code` := 5040]
occ50_xwalk[OCC1950 == 365, `CPS Code` := 5040]
occ50_xwalk[OCC1950 == 410, `CPS Code` := NA]## auctioneer
occ50_xwalk[OCC1950 == 430, `CPS Code` := 4950]
occ50_xwalk[OCC1950 == 525, `CPS Code` := 8465]
occ50_xwalk[OCC1950 == 542, `CPS Code` := 9210]
occ50_xwalk[OCC1950 == 595, `CPS Code` := NA]# armed services
occ50_xwalk[OCC1950 == 614, `CPS Code` := NA]# apprentice
occ50_xwalk[OCC1950 == 615, `CPS Code` := NA]# apprentice
occ50_xwalk[OCC1950 == 625, `CPS Code` := 9122]
occ50_xwalk[OCC1950 == 630, `CPS Code` := 6441]
occ50_xwalk[OCC1950 == 675, `CPS Code` := 8365]
#occ50_xwalk[OCC1950 == 681, `CPS Code` := 9240]###
occ50_xwalk[OCC1950 == 751, `CPS Code` := 4655]
occ50_xwalk[OCC1950 == 910, `CPS Code` := 6100]#
occ50_xwalk[OCC1950 == 960, `CPS Code` := 9130]#
occ50_xwalk[OCC1950 == 960, `CPS Code` := 9750]#
occ50_xwalk[OCC1950 == 764, `CPS Code` := 4220]#

occ50_xwalk <- occ50_xwalk[OCC1950 != 635]
occ50_xwalk <- rbind(occ50_xwalk, 
                     data.table(OCC1950 = 600, `CPS Code` = 7160, 
                                OCC1950_name = "Apprentice auto Mmechanics"))
occ50_xwalk <- rbind(occ50_xwalk, 
                     data.table(OCC1950 = 600, `CPS Code` = 7200, 
                                OCC1950_name = "Apprentice auto Mmechanics"))
occ50_xwalk <- rbind(occ50_xwalk, 
                     data.table(OCC1950 = 600, `CPS Code` = 7210, 
                                OCC1950_name = "Apprentice auto Mmechanics"))
occ50_xwalk <- occ50_xwalk[OCC1950 != 4]
#occ50_xwalk <- occ50_xwalk[!is.na(`CPS Code`)]

namez <- occ50_xwalk[!is.na(OCC1950_name),.(OCC1950_name = OCC1950_name[1]), by = OCC1950] %>% unique()
namez <- namez[!is.na(OCC1950)]
occ50_xwalk <- merge(occ50_xwalk, namez, by = "OCC1950")
occ50_xwalk <- occ50_xwalk[OCC1950 %in% 0:990]
occ50_xwalk[, OCC1950_name := OCC1950_name.y]
occ50_xwalk[, c("OCC1950_name.x", "OCC1950_name.y") := NULL]



#occ50_xwalk <- occ50_xwalk[!is.na(`CPS Code`)]
#
# manually correct missing 
manual = data.table(OCC1950 = gen[,unique(occ1950)], 
                    `CPS Code`= NA_integer_, 
                    OCC1950_name = NA_character_)
manual[OCC1950 == 5, `CPS Code` := 272021]
manual[OCC1950 == 10, `CPS Code` := 119033]
manual[OCC1950 == 13, `CPS Code` := 251042]
manual[OCC1950 == 14, `CPS Code` := 251052]
manual[OCC1950 == 15, `CPS Code` := 251063]
manual[OCC1950 == 16, `CPS Code` := 251032]
manual[OCC1950 == 18, `CPS Code` := 251022]
manual[OCC1950 == 23, `CPS Code` := 251054]
manual[OCC1950 == 24, `CPS Code` := 251066]
manual[OCC1950 == 52, `CPS Code` := 259021]
manual[OCC1950 == 59, `CPS Code` := 291141]
manual[OCC1950 == 84, `CPS Code` := 193099]
manual[OCC1950 == 91, `CPS Code` := 251069]
manual[OCC1950 == 95, `CPS Code` := 519061]
manual[OCC1950 == 204, `CPS Code` := 132072]
manual[OCC1950 == 210, `CPS Code` := 131041]
manual[OCC1950 == 240, `CPS Code` := 535031]
manual[OCC1950 == 250, `CPS Code` := 112032]
manual[OCC1950 == 260, `CPS Code` := 119199]
manual[OCC1950 == 280, `CPS Code` := 131023]
manual[OCC1950 == 300, `CPS Code` := 131011]
manual[OCC1950 == 341, `CPS Code` := 439071]
manual[OCC1950 == 350, `CPS Code` := 439061]
#manual[OCC1950 == 365, `CPS Code` := 432099]
manual[OCC1950 == 430, `CPS Code` := NA]# Peddler
manual[OCC1950 == 490, `CPS Code` := 419099]
manual[OCC1950 == 504, `CPS Code` := 472021]
manual[OCC1950 == 510, `CPS Code` := 472031]
manual[OCC1950 == 514, `CPS Code` := 271025]
manual[OCC1950 == 522, `CPS Code` := 472071]
manual[OCC1950 == 525, `CPS Code` := 516099]
manual[OCC1950 == 532, `CPS Code` := 454023]
manual[OCC1950 == 535, `CPS Code` := 514033]
manual[OCC1950 == 543, `CPS Code` := 499041]
manual[OCC1950 == 545, `CPS Code` := 493011]
manual[OCC1950 == 553, `CPS Code` := 493043]
manual[OCC1950 == 561, `CPS Code` := 514072]
manual[OCC1950 == 564, `CPS Code` := 472141]
manual[OCC1950 == 571, `CPS Code` := 515111]
manual[OCC1950 == 574, `CPS Code` := 472152]
manual[OCC1950 == 584, `CPS Code` := 519195]
manual[OCC1950 == 590, `CPS Code` := 516052]
manual[OCC1950 == 591, `CPS Code` := 472211]
manual[OCC1950 == 594, `CPS Code` := 271012]

manual[OCC1950 == 601, `CPS Code` := 472021]
manual[OCC1950 == 602, `CPS Code` := 472031]
manual[OCC1950 == 603, `CPS Code` := 472111]
manual[OCC1950 == 604, `CPS Code` := 514041]
manual[OCC1950 == 605, `CPS Code` := 499071]
manual[OCC1950 == 610, `CPS Code` := 472152]
manual[OCC1950 == 611, `CPS Code` := 474099]
manual[OCC1950 == 613, `CPS Code` := 515112]
#manual[OCC1950 == 614, `CPS Code` := 473019]
manual[OCC1950 == 623, `CPS Code` := 536011]
manual[OCC1950 == 630, `CPS Code` := 173031]
manual[OCC1950 == 632, `CPS Code` := 533031]
manual[OCC1950 == 634, `CPS Code` := 516061]
manual[OCC1950 == 635, `CPS Code` := 519022]
manual[OCC1950 == 640, `CPS Code` := 452092]
manual[OCC1950 == 641, `CPS Code` := 514051]
manual[OCC1950 == 642, `CPS Code` := 519051]
manual[OCC1950 == 660, `CPS Code` := 537199]
manual[OCC1950 == 661, `CPS Code` := 534041]
manual[OCC1950 == 681, `CPS Code` := 534022]
manual[OCC1950 == 700, `CPS Code` := 372012]
manual[OCC1950 == 710, `CPS Code` := 516011]
manual[OCC1950 == 720, `CPS Code` := 399099]
manual[OCC1950 == 752, `CPS Code` := 119081]
manual[OCC1950 == 761, `CPS Code` := 393031]
manual[OCC1950 == 782, `CPS Code` := 331012]
manual[OCC1950 == 785, `CPS Code` := 536011]
manual[OCC1950 == 830, `CPS Code` := 452093]
manual[OCC1950 == 840, `CPS Code` := 452093]
manual[OCC1950 == 940, `CPS Code` := 537062]
manual[OCC1950 == 970, `CPS Code` := 537062]
manual[OCC1950 == 764, `CPS Code` := 372012]

manual[OCC1950 == 999, `CPS Code` := NA]

manual[OCC1950 == 3, `CPS Code` := 171011]
manual[OCC1950 == 12, `CPS Code` := 251041]

# manual[OCC1950 == 28, `CPS Code` := NA]# non-scientific subjects
# manual[OCC1950 == 29, `CPS Code` := NA]# subjet not specified
manual[OCC1950 == 33, `CPS Code` := 271021]
#manual[OCC1950 == 35, `CPS Code` := 173019]
manual[OCC1950 == 54, `CPS Code` := 119171]
manual[OCC1950 == 56, `CPS Code` := 254022]
manual[OCC1950 == 65, `CPS Code` := 192042]
manual[OCC1950 == 67, `CPS Code` := 152021]
manual[OCC1950 == 71, `CPS Code` := 291229]
#manual[OCC1950 == 75, `CPS Code` := 291062]
manual[OCC1950 == 77, `CPS Code` := 399032]
manual[OCC1950 == 82, `CPS Code` := 193033]
manual[OCC1950 == 91, `CPS Code` := 399031]
manual[OCC1950 == 96, `CPS Code` := 173029]
#manual[OCC1950 == 123, `CPS Code` := 119013]
manual[OCC1950 == 201, `CPS Code` := 131021]
manual[OCC1950 == 205, `CPS Code` := 411011]
manual[OCC1950 == 270, `CPS Code` := 119131]
manual[OCC1950 == 304, `CPS Code` := 396011]
manual[OCC1950 == 322, `CPS Code` := 435032]
manual[OCC1950 == 325, `CPS Code` := 435021]
#manual[OCC1950 == 365, `CPS Code` := 432099]
#manual[OCC1950 == 410, `CPS Code` := 419099]
manual[OCC1950 == 430, `CPS Code` := NA] # peddler huckster
manual[OCC1950 == 490, `CPS Code` := 412031]
manual[OCC1950 == 520, `CPS Code` := 515112]
manual[OCC1950 == 524, `CPS Code` := 514022]
#manual[OCC1950 == 525, `CPS Code` := 516099]
manual[OCC1950 == 531, `CPS Code` := 514191]
manual[OCC1950 == 541, `CPS Code` := 534011]
#manual[OCC1950 == 542, `CPS Code` := 534022]
manual[OCC1950 == 555, `CPS Code` := 513092]
manual[OCC1950 == 562, `CPS Code` := 393021]
manual[OCC1950 == 565, `CPS Code` := 472142]
manual[OCC1950 == 570, `CPS Code` := 514061]
manual[OCC1950 == 572, `CPS Code` := 499063]
manual[OCC1950 == 580, `CPS Code` := 514023]
manual[OCC1950 == 612, `CPS Code` := 472211]
#manual[OCC1950 == 614, `CPS Code` := 473019]
#manual[OCC1950 == 615, `CPS Code` := 473019]
manual[OCC1950 == 622, `CPS Code` := 475032]
#manual[OCC1950 == 624, `CPS Code` := 534022]
manual[OCC1950 == 625, `CPS Code` := 533051]
manual[OCC1950 == 631, `CPS Code` := 536061]
manual[OCC1950 == 645, `CPS Code` := 516099]
manual[OCC1950 == 660, `CPS Code` := 475044]
#manual[OCC1950 == 675, `CPS Code` := 516065]
#manual[OCC1950 == 681, `CPS Code` := 534022]
manual[OCC1950 == 684, `CPS Code` := 516063]
manual[OCC1950 == 690, `CPS Code` := NA]# Operative and kindred workers (n.e.c.)
manual[OCC1950 == 720, `CPS Code` := 399099]
#manual[OCC1950 == 751, `CPS Code` := 399099]
manual[OCC1950 == 760, `CPS Code` := 359031]
manual[OCC1950 == 771, `CPS Code` := 333051]
manual[OCC1950 == 772, `CPS Code` := 299099]
manual[OCC1950 == 790, `CPS Code` := 399099]
#manual[OCC1950 == 910, `CPS Code` := 453031]
manual[OCC1950 == 920, `CPS Code` := 537061]
manual[OCC1950 == 930, `CPS Code` := 373011]
#manual[OCC1950 == 960, `CPS Code` := 537199]

manual[OCC1950 == 100, `CPS Code` := 119013]
manual[OCC1950 == 123, `CPS Code` := 119013]
manual[OCC1950 == 624, `CPS Code` := 534022]
manual[OCC1950 == 751, `CPS Code` := 311122]
manual[OCC1950 == 910, `CPS Code` := 453031]

manual[OCC1950 == 17, `CPS Code` := 251064]
manual <- rbind(manual, data.table(OCC1950 = 17, `CPS Code` = 251053), fill = T)
manual[OCC1950 == 19, `CPS Code` := 251071]
manual <- rbind(manual, data.table(OCC1950 = 19, `CPS Code` = 251072), fill = T)
manual[OCC1950 == 25, `CPS Code` := 251022]
manual[OCC1950 == 26, `CPS Code` := 251051]
manual <- rbind(manual, data.table(OCC1950 = 26, `CPS Code` = 251043), fill = T)
manual[OCC1950 == 27, `CPS Code` := 251069]
manual <- rbind(manual, data.table(OCC1950 = 27, `CPS Code` = 251067), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 27, `CPS Code` = 251065), fill = T)
manual[OCC1950 == 4, `CPS Code` := 271013]
manual <- rbind(manual, data.table(OCC1950 = 4, `CPS Code` = 251121), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 4, `CPS Code` = 271014), fill = T)
manual[OCC1950 == 28, `CPS Code` := 251081]
manual <- rbind(manual, data.table(OCC1950 = 28, `CPS Code` = 251082), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 28, `CPS Code` = 251062), fill = T)
manual[OCC1950 == 29, `CPS Code` := 251011]
manual <- rbind(manual, data.table(OCC1950 = 29, `CPS Code` = 251031), fill = T)
manual[OCC1950 == 67, `CPS Code` := 152021]
manual[OCC1950 == 100, `CPS Code` := 119013]
manual <- rbind(manual, data.table(OCC1950 = 100, `CPS Code` = 452093), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 100, `CPS Code` = 452092), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 100, `CPS Code` = 452091), fill = T)
manual[OCC1950 == 123, `CPS Code` := 451011]
manual[OCC1950 == 360, `CPS Code` := 432021]
manual[OCC1950 == 365, `CPS Code` := 432021]
manual[OCC1950 == 410, `CPS Code` := 131022]# auctioneer
manual[OCC1950 == 501, `CPS Code` := 514122]
manual <- rbind(manual, data.table(OCC1950 = 501, `CPS Code` = 514192), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 501, `CPS Code` = 514193), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 501, `CPS Code` = 514194), fill = T)

manual[OCC1950 == 595, `CPS Code` := NA] #armed services
manual[OCC1950 == 612, `CPS Code` := 514122]
manual <- rbind(manual, data.table(OCC1950 = 612, `CPS Code` = 514192), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 612, `CPS Code` = 514193), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 612, `CPS Code` = 514194), fill = T)
manual[OCC1950 == 614, `CPS Code` := 339091]
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 514194), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 454011), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 472061), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 473011), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 473012), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 473013), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 473014), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 473015), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 473016), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 473031), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 473051), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 474061), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 474071), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 513093), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 519198), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 537063), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 614, `CPS Code` = 537081), fill = T)

manual[OCC1950 == 615, `CPS Code` := 339091]
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 514194), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 454011), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 472061), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 473011), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 473012), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 473013), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 473014), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 473015), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 473016), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 473031), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 473051), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 474061), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 474071), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 513093), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 519198), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 537063), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 615, `CPS Code` = 537081), fill = T)
manual[OCC1950 == 624, `CPS Code` := 534031]
manual[OCC1950 == 681, `CPS Code` := 534031]
manual[OCC1950 == 720, `CPS Code` := 371011]
manual[OCC1950 == 910, `CPS Code` := 453031]
manual[OCC1950 == 960, `CPS Code` := 537121]
manual <- rbind(manual, data.table(OCC1950 = 762, `CPS Code` = 332021), fill = T)
manual[OCC1950 == 57, `CPS Code` := 272041]
manual <- rbind(manual, data.table(OCC1950 = 57, `CPS Code` = 272042), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 290, `CPS Code` = 119111), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 63, `CPS Code` = 192042), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 95, `CPS Code` = 194099), fill = T)
manual <- rbind(manual, data.table(OCC1950 = 83, `CPS Code` = 439111), fill = T)
manual[OCC1950 == 582, `CPS Code` := 516041]









#manual[OCC1950 == 29, `CPS Code` := 251199]
#manual[OCC1950 == 28, `CPS Code` := 251199]   


#
skills[, cps_codes := as.character(`CPS Code`)]
skills <- merge(skills, occ50_xwalk[!is.na(`CPS Code`)]#[!is.na(`CPS Code`),.(`OCC1950` = unique(`OCC1950`)[1], 
                #         `OCC1950_name` = unique(`OCC1950_name`)[1]), by = `CPS Code`]
                , by.x = "cps_codes", by.y = "CPS Code", all.x = T, allow.cartesian = T)
manual[, `CPS Code` := as.character(`CPS Code`)]
skills <- merge(skills, manual, by.x = "OCCSOC", by.y = "CPS Code", all.x = T, allow.cartesian = T)
temp <- skills[OCC1950.x != OCC1950.y]
temp1 <- copy(temp)
temp2 <- copy(temp)
temp1[, OCC1950 := OCC1950.x]
temp1[, OCC1950_name := OCC1950_name.x]
temp1[,c("OCC1950.x", "OCC1950.y", "OCC1950_name.y", "OCC1950_name.x") := NULL]
temp2[, OCC1950 := OCC1950.y]
temp2[, OCC1950_name := OCC1950_name.y]
temp2[,c("OCC1950.x", "OCC1950.y", "OCC1950_name.y", "OCC1950_name.x") := NULL]
skills[!is.na(OCC1950.y), OCC1950 := OCC1950.y]
skills[is.na(OCC1950.y), OCC1950 := OCC1950.x]
skills[is.na(OCC1950_name.x), OCC1950_name := OCC1950_name.y]
skills[!is.na(OCC1950_name.x), OCC1950_name := OCC1950_name.x]
skills[,c("OCC1950.x", "OCC1950.y", "OCC1950_name.y", "OCC1950_name.x") := NULL]
skills <- rbindlist(list(skills, temp1, temp2))
# collapse to OCCSOC
skills[is.na(OCC1950_name), OCC1950_name := `CPS Occupational Title`]
skills[OCC1950 == 250, OCC1950_name := "Officials and administrators (n.e.c.), public administration"]
skills[OCC1950 == 260, OCC1950_name := "Officials, lodge, society, union, etc."]
skills[OCC1950 == 280, OCC1950_name := "Purchasing agents and buyers (n.e.c.)"]
skills[OCC1950 == 611, OCC1950_name := "Apprentices, building trades (n.e.c.)"]

#

# try to rename again
occ1950_names <- fread("../ref/occ1950_recode.csv")
skills[, OCC1950 := as.character(OCC1950)]
skills <- merge(skills, occ1950_names[,.(V1, V2)], all.x = T, by.x = "OCC1950", by.y = "V1")
skills[, OCC1950_name := V2]
skills[, V2 := NULL]

skills[OCC1950 %in% 12:29, OCC1950_name := paste0("Post-Secondary Instructors/Deans: ", OCC1950_name)]

# 

# dont use any soc code twice
skills[,.(OCC1950,OCCSOC )] %>% unique() %>% 
  .[!is.na(OCC1950),.(OCCSOC,OCC1950 )] %>% .[duplicated(.[!is.na(OCC1950),.(OCCSOC)])] %>% unique() -> dupes
dupes <- dupes$OCCSOC
skills[OCCSOC %in% dupes & !is.na(OCC1950),.(OCCSOC, OCC1950_name, OCC1950)] %>% unique() %>% .[order(OCCSOC)]

skills <- skills[!(OCCSOC == 152021 & OCC1950 == 83)]
skills <- skills[!(OCCSOC == 119033 & OCC1950 == 93)]
skills <- skills[!(OCCSOC == 119081 & OCC1950 == 290)]
skills <- skills[!(OCCSOC == 119199 & OCC1950 == 290)] ###
skills <- skills[!(OCCSOC == 131011 & OCC1950 == 290)]
skills <- skills[!(OCCSOC == 132072 & OCC1950 == 290)]
#skills <- skills[!(OCCSOC == 152021 & OCC1950 == 67)] # check last round hunter
skills <- skills[!(OCCSOC == 172021 & OCC1950 == 12)]
skills <- skills[!(OCCSOC == 331012)]
skills <- skills[!(OCCSOC == 359031 & OCC1950 == 754)]
skills <- skills[!(OCCSOC == 411011 & OCC1950 == 290)]
skills <- skills[!(OCCSOC == 439061 & OCC1950 == 350)]
skills <- skills[!(OCCSOC == 452092 & OCC1950 == 820)]
skills <- skills[!(OCCSOC == 454023 & OCC1950 == 950)]
skills <- skills[!(OCCSOC == 472211 & OCC1950 == 612)]
skills <- skills[!(OCCSOC == 493043 & OCC1950 == 554)]

skills <- skills[!(OCCSOC == 499063 & OCC1950 == 534)]
skills <- skills[!(OCCSOC == 499062 & OCC1950 == 534)]
skills <- skills[!(OCCSOC == 499061 & OCC1950 == 554)]
skills <- skills[!(OCCSOC == 499071 & OCC1950 == 554)]
skills <- skills[!(OCCSOC == 499041 & OCC1950 == 554)]

skills <- skills[!(OCCSOC == 513092 & OCC1950 == 690)]
skills <- skills[!(OCCSOC == 514022 & OCC1950 == 554)]
skills <- skills[!(OCCSOC == 514033 & OCC1950 == 554)]
skills <- skills[!(OCCSOC == 514051 & OCC1950 == 680)]
skills <- skills[!(OCCSOC == 514061 & OCC1950 == 690)]
skills <- skills[!(OCCSOC == 514072 & OCC1950 == 690)]

skills <- skills[!(OCCSOC == 516052 & OCC1950 == 633)]
skills <- skills[!(OCCSOC == 516063 & OCC1950 == 675)]
skills <- skills[!(OCCSOC == 519051 & OCC1950 == 680)]
skills <- skills[!(OCCSOC == 519061 & OCC1950 == 690)]
skills <- skills[!(OCCSOC == 519195 & OCC1950 == 690)]
skills <- skills[!(OCCSOC == 533031 & OCC1950 == 683)]
skills <- skills[!(OCCSOC == 533031 & OCC1950 == 960)]
skills <- skills[!(OCCSOC == 499091 & OCC1950 == 632)]
skills <- skills[!(OCCSOC == 533032 & OCC1950 == 683)]
skills <- skills[!(OCCSOC == 533033 & OCC1950 == 960)]

skills <- skills[!(OCCSOC == 534011 & OCC1950 == 542)]
skills <- skills[!(OCCSOC == 535031 & OCC1950 == 240)]
skills <- skills[!(OCCSOC == 535031 & OCC1950 == 673)]
skills <- skills[!(OCCSOC == 537061 & OCC1950 == 970)]
skills <- skills[!(OCCSOC == 537062 & OCC1950 == 970)]
skills <- skills[!(OCCSOC == 493031 & OCC1950 == 550)]
skills <- skills[!(OCCSOC == 519022 & OCC1950 == 690)]
skills <- skills[!(OCCSOC == 371011 & OCC1950 == 770)]
skills <- skills[!(OCCSOC == 372011 & OCC1950 == 764)]
skills <- skills[!(OCCSOC == 131111 & OCC1950 == 45)]
skills <- skills[!(OCCSOC == 332021 & OCC1950 == 53)]
skills <- skills[!(OCCSOC == 119111 & OCC1950 == 58)]
skills <- skills[!(OCCSOC == 194099 & OCC1950 == 63)]
skills <- skills[!(OCCSOC == 439111 & OCC1950 == 390)]
skills <- skills[!(OCCSOC == 472041 & OCC1950 == 582)]
skills <- skills[!(OCCSOC == 472042 & OCC1950 == 582)]
skills <- skills[!(OCCSOC == 472043 & OCC1950 == 582)]
skills <- skills[!(OCCSOC == 472044 & OCC1950 == 582)]
skills <- skills[!(OCCSOC == 252059 & OCC1950 == 57)]


# reduce to observations with more than 10 cases
gen[,.N, by = occ1950] %>% 
  merge(., gen[,.N, by = focc1950], by.x = "occ1950", by.y = "focc1950") %>%
  .[, N := N.x + N.y] %>%
  .[, occ1950 := as.character(occ1950)] %>% 
  merge(., skills[,.(OCC1950, OCC1950_name)], by.x = "occ1950", by.y = "OCC1950") %>% .[order(N)] %>%
  .[N.x < 10|N.y < 10, occ1950] -> excl

skills <- skills[!OCC1950 %in% excl]


skills[,.(OCC1950, OCC1950_name, OCCSOC, `CPS Occupational Title`)] %>% unique() %>% .[!is.na(OCC1950)] -> xwalk_occs_soc



#xwalk_occs_soc[OCCSOC %in% xwalk_occs_soc[duplicated(OCCSOC), OCCSOC]] %>% .[order(OCCSOC)] -> table1
xwalk_occs_soc -> table1

table1[, OCCSOC := paste0(substr(OCCSOC,1,2), "-", substr(OCCSOC, 3, 6), "")]
table1[, OCC1950 := as.numeric(OCC1950)]
table1 <- table1[order(OCC1950)]

education_2018 <- read_excel("../ref/db_22_2_excel 2018.2/Education, Training, and Experience.xlsx") %>% data.table()
temp <- education_2018[,.(`O*NET-SOC Code`, Title)] %>% unique()
temp[, OCCSOC := substr(`O*NET-SOC Code`,1,7)]
temp <- temp[, Title := Title[1], by = OCCSOC]
temp <- temp[,.(OCCSOC, Title)] %>% unique()

table1 <- merge(table1, temp[,.(OCCSOC, Title)])
table1 <- table1[order(OCC1950)]
table1 <- table1[,.(OCC1950, OCC1950_name, OCCSOC, Title)]
# 
# fwrite(xwalk_occs_soc, "~/Desktop/xwalk_all.csv")
# fwrite(table1, "~/Desktop/xwalk_redundant.csv")



fwrite(xwalk_occs_soc, "../ref/xwalks_occ_soc.csv")

vars <- names(skills)[names(skills) %like% ".LV|PC|fact_"]
skills[, OCC1950_name := unique(OCC1950_name)[1], by = OCC1950]
skills <- skills[,lapply(.SD, mean), .SDcols = vars, by = .(OCC1950, OCC1950_name)]

# subset to only occs in the data
skills <- skills[OCC1950 %in% gen$occ1950 | OCC1950 %in% gen$focc1950]

#gen[!occ1950 %in% skills$OCC1950]$occ1950 %>% unique()

skills_arch <- copy(skills)
```


```{r}
#
#remove <- caret::findCorrelation(cor(skills[,.SD, .SDcols = names(skills)[names(skills) %like% ".LV"]]), cutoff = .90)
#skills <- skills[, .SD, .SDcols = c(names(skills)[names(skills) %like% ".LV"][-remove],
#                                    names(skills)[!names(skills) %like% ".LV"])]
#
out <- psych::fa.parallel(x= cor(skills[,.SD, .SDcols = names(skills)[names(skills) %like% ".LV"]]), fm="minres", fa="fa",
                          n.obs = nrow(skills))

data.table(component = 1:length(out$fa.values), fa_values = out$fa.values, fa_sim_data = out$fa.sim) %>% 
  .[1:16] %>% 
  melt(id.vars = "component") %>% 
  .[variable == "fa_sim_data", variable := "Simulated"] %>% 
  .[variable == "fa_values", variable := "Observed"] %>% 
  ggplot() +
  geom_point(aes(x = component, y = value, shape = variable, color = variable))  + 
  geom_line(aes(x = component, y = value, color = variable, linetype = variable))  + 
  scale_linetype_manual(values = 2:4) + 
  scale_color_viridis_d(begin = .4, end = .8) +
  scale_y_continuous(trans = "log10", limits = c(0.1, 100)) + 
  scale_x_continuous(breaks = seq(0,20, 1))  +
  labs(x = "Factor Analysis Component", y = "Eigenvalue", 
       # title = "Comparison of Factor Analysis Observed Eigenvalues and\nThose of A Randomly Generated Dataset of the Same Size", 
       color = "", shape = "", linetype = "") + 
  theme(legend.position = "bottom", 
        legend.text = element_text(size = 8)) -> gg

pdf("../outputs/figure_appendix_2.pdf", width = 4.3, height = 3.3)
print(gg)
dev.off()




###
# # label factors
fact_anal_orig <- psych::fa(skills[,.SD, .SDcols = names(skills)[names(skills) %like% ".LV"]], nfactors = 10, max.iter = 100000, scores = "regression", rotate = "varimax")

# append to data
fact_scores <- fact_anal_orig$scores %>% data.table()
setnames(fact_scores, names(fact_scores), gsub("MR", "fact_", names(fact_scores)))

skills <- cbind(skills, fact_scores)
# add in status
# merge occupation data from census

SEI <- fread("../ref/usa_00022.csv")
SEI <- SEI[,.(OCC1950, PRESGL, SEI)] %>% unique()
setnames(SEI, c("PRESGL"), c( "prestige"))
SEI[, OCC1950 := as.character(OCC1950)]
skills[, OCC1950 := as.character(OCC1950)]
skills <- merge(skills, SEI, all.x = T, by = "OCC1950")

# do QR decomposition to orthogonalize SEI
skills_subset <- skills[, .SD, .SDcols = names(skills)[names(skills) %like% "fact_|SEI"]]
skills_subset$SEI <- scale(skills_subset$SEI)
qr.Q(qr(skills_subset)) %>% data.table()-> skills_subset_norm

skills$SEI_norm <- skills_subset_norm$V11

# PRC
skills_attrs <- skills[,.SD, .SDcols = names(skills)[names(skills) %like% ".LV"]]
prcomp(skills_attrs) -> prc_arch
prc <- prc_arch$x[, 1:10]


skills <- cbind(skills, prc)
######
extract_cum_variance <- function (x, digits = 3L, cutoff = 0.1, sort = FALSE, ...) 
{
  Lambda <- unclass(x)
  p <- nrow(Lambda)
  factors <- ncol(Lambda)
  
  vx <- colSums(x^2)
  varex <- rbind(`SS loadings` = vx)
  
  if (is.null(attr(x, "covariance"))) {
    varex <- rbind(varex, `Proportion Var` = vx/p)
    if (factors > 1) 
      varex <- rbind(varex, `Cumulative Var` = cumsum(vx/p))
  }
  return(varex)
}


loadings <- extract_cum_variance(fact_anal_orig$loadings)




```


```{r}


#skills <- fread("../ref/skills_final_2.csv")
alt_names <- fread("../ref/skills_xwalk.csv")
setnames(skills, paste0(alt_names$Element.Name2[paste0(alt_names$Element.Name2, ".LV") %in% names(skills)], ".LV"), 
         paste0(alt_names$Element.Name[paste0(alt_names$Element.Name2, ".LV") %in% names(skills)], ".LV"), skip_absent = T)
cps_codes <- skills$`CPS Code`

######################################
#collapse to microocc
########################################
###
cheng <- data.table(readstata13::read.dta13("../ref/occ1950_mc_xwalk_70.dta"))
cheng[, occ1950 := gsub("[^A-Za-z0-9]", "", tolower(occ1950))]
# occ50 recode
occ50_recode <- fread("../ref/occ1950_recode.csv")
occ50_recode <- occ50_recode[,1:2]
names(occ50_recode) <- unlist(occ50_recode[1, ])
occ50_recode <- occ50_recode[-1,]
occ50_recode <- occ50_recode[!is.na(as.numeric(occ1950_num))]
occ50_recode[, occ1950 := gsub("[^A-Za-z0-9]", "", tolower(occ1950))]
# merge
cheng <- merge(cheng, occ50_recode[,.(occ1950, occ1950_num)], all.x = T)
#fix the stragglers
fix <- cheng[is.na(occ1950_num)]
candidates <- occ50_recode[!occ1950 %in% cheng$occ1950]
for(c.fix in 1:nrow(fix)){
  goal <- substr(fix[c.fix, occ1950],1,7)
  new <- candidates[candidates$occ1950 %like% goal, occ1950_num]
  if(length(new) == 1){fix[c.fix, new_occ1950_num := new]}
}
fix[is.na(new_occ1950_num), new_occ1950_num := c(43, 34, 44, 603, 16, 46, 605,94, 19,48,69,84,26,23,27,29)]
cheng <- merge(cheng, fix[,.(occ1950, new_occ1950_num)], by = "occ1950", all.x = T)
cheng[is.na(occ1950_num), occ1950_num := new_occ1950_num]
cheng[, occ1950_num := as.numeric(occ1950_num)]
cheng[, new_occ1950_num := NULL]
setnames(cheng, "occ1950_num", "OCC1950")
cheng[, occ1950 := NULL]
factorr <- function(x){ifelse(is.character(x), return(factor(x)), return(x))}
cheng[,names(cheng) := lapply(.SD, factorr), .SDcols = names(cheng)]
##

cheng[, OCC1950 := as.character(OCC1950)]
skills <- skills[!is.na(OCC1950)]
skills <- merge(skills, cheng, by = "OCC1950", all.x = T)

```





```{r}

factors <-fact_anal_orig$scores %>% data.table()
facys <- data.frame(matrix(as.numeric(fact_anal_orig$loadings), attributes(fact_anal_orig$loadings)$dim, dimnames=attributes(fact_anal_orig$loadings)$dimnames))

# make a little figure showing top 5 traits per factor
get_vars <- function(df, x, n){
  df <- data.table(df, keep.rownames = T)
  y <- df[, get(x)] %>% abs() %>% order(decreasing = T)
  signs <-  df[, get(x)][y] %>% sign()
  signs <- ifelse(signs == -1, "---", "")
  out <- df[, rn][y][1:n]
  out <- paste0(signs[1:n], out, signs[1:n])
  out <- gsub( ".LV", "", out)
  return(out)
}

table3 <- lapply(names(facys)[!names(facys) %like% "rn"], get_vars, df = facys, n = 5)
table3 <- lapply(table3, function(x){paste0(x, collapse = "; ")})




factors_names <- c(paste0("fact_", 1:10,"_",
                          c("Problem Solving", 
                            "Precision/Operation/Quality Control",
                            "Concern/Caringness/Self Control",
                            "Attention to Detail/Repetition",
                            "Finance/Management",
                            "Spatial Orientation/Transportation",
                            "Innovation/Originality/Persistence",
                            "Construction/Installation",
                            "Judgment/Interpretation",
                            "Responsibility/Leadership")))

factors_names <- paste0(factors_names, "_fac")
setnames(skills, names(skills)[names(skills) %like% "fact_"], factors_names)


# make that table now
maxes <- lapply(factors_names, function(x){skills[(order(get(x), decreasing = T)), paste0(OCC1950_name[1], collapse = "; ")]})
mins <- lapply(factors_names, function(x){skills[(order(get(x))), paste0(OCC1950_name[1], collapse = "; ")]})

table_out3 <- data.table(Factor = factors_names, 
                         `Top 5 Components` = table3, 
                         `Maximum Occupation` = maxes, 
                         `Minimum Occupation` = mins)

saveRDS(table_out3, "../occs_exemps.rds")

stargazer::stargazer(table_out3, summary = F, out = "../table3.html")




skills <-skills[,lapply(.SD, mean), by = .(OCC1950, OCC1950_name, microocc, mesoocc, macroocc), .SDcols = names(skills)[names(skills) %like% ".LV|fact|PC|SEI|prestige|SEI"]]



job_chars <- fread('../ref/usa_00028.csv')
job_chars <- job_chars[AGE %in% 18:65]
job_chars <- job_chars[OCC1950 != 999]
job_chars <- job_chars[EMPSTAT == 1]
job_chars <- job_chars[LABFORCE ==2]

job_sum <- job_chars[,.(percent_female = weighted.mean((SEX - 1), PERWT),
                        percent_black = weighted.mean(RACE == 2, PERWT),
                        percent_hispanic = weighted.mean(HISPAN %in% 2:4, PERWT),
                        median_age = spatstat.geom::weighted.median(AGE, PERWT), 
                        percent_selfemp = weighted.mean((CLASSWKR == 1), PERWT)),
                     by = .(OCC1950)]

skills[, OCC1950 := as.integer(OCC1950)]
skills <- merge(skills, job_sum, by = "OCC1950", all.x = T) %>% data.table()
skills[, prestige := prestige/100]
skills[, SEI := SEI/100]

skills[, median_age := (median_age - 18)/ (65-18)]
#



skills_attrs <- skills[,.SD, .SDcols = names(skills)[names(skills) %like% ".LV|fact|PC|median|percent_bl|percent_f|SEI|prestige|percent_se"]]


# see how correlated status is 
mody <- lm(as.formula(paste0("SEI_norm ~", paste0(paste0("`",factors_names, "`"), collapse = " + "))), 
           data = skills)

```

# cum variance

```{r}
data.table(loadings, keep.rownames = T) %>% 
  setnames(., c("Indicator", paste0(1:10, ": ", tstrsplit(factors_names, "_", keep = 3)[[1]]))) %>% 
  melt(id.vars = "Indicator") %>% 
  .[Indicator == "Cumulative Var", Indicator := "Cumulative Variance"] %>% 
  .[Indicator == "Cumulative Variance"] %>% 
  ggplot() +
  geom_point(aes(x = variable, y = value), shape = 1)  + 
  geom_line(aes(x = variable, y = value, group = Indicator), linetype = 3)  + 
  scale_y_continuous(breaks = seq(0,1,.1), limits = c(0,1), labels = scales::percent) + 
  labs(x = "Factor Analysis Component", y = "Cumulative Variance Explained", 
       # title = "Cumulative Variance Explained by Each Successive Latent Factor",
       color = "", shape = "", linetype = "") + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(legend.position = "bottom", 
        legend.text = element_text(size = 8))  -> gg

#gg
pdf("../outputs/figure_appendix_1.pdf", width = 4.3, height = 3.3)
print(gg)
dev.off()

```

## PRC - Cumulative proportion of variance explained by each PC variable

```{r}

prop_var <- summary(prc_arch)$importance[3,1:pc_n]

ggplot() + 
  geom_point(aes(x = 1:pc_n, y = prop_var)) + 
  labs(x = "cumulative variance explained per PCA component") + 
  ylim(0, 1) + theme_bw()
```


## Plot dims one and two

```{r}

factoextra::fviz_pca_var(prc_arch, 
                         col.var = "contrib",
                         gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
                         repel = T, 
                         axes = c(1,2),
                         select.var = list(contrib = 10))


get_feats_pca <- function(pca, nfeat, top_k){
  cbind(data.table(prc_arch$rotation), names(skills_attrs))[order(abs(get(paste0("PC", nfeat))), decreasing = T)] %>% 
    .[1:top_k] %>% 
    .[,.(V2, get(paste0("PC", nfeat)))] %>% 
    .[, feat := nfeat]
}

pca_out <- lapply(1:15, get_feats_pca, pca = prc_arch, top_k = 15) %>% 
  rbindlist()

setnames(pca_out, c("skill", "V2", "feat"))

ggplot(pca_out) + 
  geom_bar(aes(x = substr(skill, 1, 30), y = V2), stat = 'identity')+
  facet_wrap(~feat, scales = "free") + 
  coord_flip()


```




# Scatter against SEI


```{r}
skills[,.SD, .SDcols = c("SEI",
                         paste0("PC", 1:9))] %>% 
  melt(., id.vars = "SEI") %>% 
  .[variable %like% "PC"] %>% 
  ggplot() +
  geom_point(aes(x = SEI, y = value)) + 
  facet_wrap(~variable) + 
  ggtitle("PCA") + theme_bw()

standardizer <- function(x){
  (x - min(x))/(max(x) - min(x))
}




skills_temp <- copy(skills[,.SD, .SDcols = names(skills)[names(skills) %like% "^fact_|SEI" & !names(skills) %like% "norm$"]] )



names(skills_temp) <- gsub("fact_", "", names(skills_temp))
names(skills_temp) <- gsub("_fac", "", names(skills_temp))
names(skills_temp) <- gsub("_", ": ", names(skills_temp))
names(skills_temp) <- gsub("_", ": ", names(skills_temp))
names(skills_temp) <- gsub("ory/Inn", "ory\nInn", names(skills_temp))
names(skills_temp) <- gsub("ail/Tim", "ail\nTim", names(skills_temp))
names(skills_temp) <- gsub("ity/Pat", "ity\nPat", names(skills_temp))
names(skills_temp) <- gsub("ers/Str", "ers\nStr", names(skills_temp))
names(skills_temp) <- gsub("ing/Mon", "ing\nMon", names(skills_temp))

gg <- skills_temp %>% 
  melt(., id.vars = "SEI") %>% 
  .[variable != "SEI: norm"] %>% 
#  .[, value := scale(value), by= .(variable)] %>% 
  .[, value := standardizer(value), by= .(variable)] %>% 
  ggplot() +
  geom_hline(yintercept = .5, linetype = 2, color = "blue") + 
  geom_point(aes(x = SEI, y = value), shape = 1, size = .9, alpha = .7) + 
  geom_smooth(aes(x = SEI, y = value), method = "lm", se = T, color = "red",fill = "red", alpha = .25, linetype = "dotted")+
  facet_wrap(~variable) + 
  ggtitle("Scatters of Factor Variables and SEI by Occupation") +
  theme_bw(base_size = 10, base_family = "serif")+
  theme(panel.spacing = unit(1, "lines")) + 
  labs(title = "", x = "SEI", y = "Scaled Value")+ 
  stat_cor(aes(x = SEI, y = value, label = after_stat(r.label)), color = "red", geom = "label",label.x.npc = .73, label.y.npc = .06, #label.x = .55, label.y = .06, 
           size = 2.5)

pdf("../outputs/figure_appendix_3.pdf", height= 6, width = 10)
print(gg)
dev.off()

comp_vars <- names(skills)[names(skills) %like% "^comp_"]
```

## Categorize by exemplar occs

```{r}



# vars <- c(paste0("PC", 1:15), paste0("umap_", 1:15), paste0("ica_", 1:15), 
#           comp_vars)
# vars_axes <- lapply(vars, get_exemplars, skills) %>% unlist()
# 
# vars_and_axes <- cbind(vars, vars_axes) %>% data.table()

five_dems <- skills[,.(prestige, percent_female, percent_black, SEI, percent_selfemp)]
five_dems_pca <- five_dems %>% copy() %>%  setnames(., paste0("PC+",17:21,names(five_dems)))
five_dems_fact <- five_dems %>% copy() %>% setnames(., paste0("fact_",17:21, "_",names(five_dems)))

skills <- cbind(skills, five_dems_pca)
skills <- cbind(skills, five_dems_fact)

```



## 

```{r}
saveRDS(skills, "../ref/skills_occ1950_new.rds")
```

